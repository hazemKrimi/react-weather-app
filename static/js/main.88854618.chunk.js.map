{"version":3,"sources":["assets/left-arrow.svg","assets/right-arrow.svg","assets/search.svg","assets/logo.svg","assets/twitter.svg","assets/github.svg","assets/linkedin.svg","pages/Home/styles.ts","components/Loader/index.tsx","components/Card/styles.ts","components/Card/index.tsx","pages/Home/index.tsx","pages/Search/styles.ts","pages/Search/index.tsx","pages/NotFound/styles.ts","pages/NotFound/index.tsx","components/GlobalStyles/index.tsx","components/Container/index.tsx","components/NavBar/styles.ts","components/SearchBar/styles.ts","components/SearchBar/index.tsx","components/NavBar/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Wrapper","styled","div","Loader","Card","date","time","data","temp","icon","description","timeString","getHours","getMinutes","toDateString","split","getMonth","getDate","className","Home","useState","weather","setWeather","forecast","setForecast","loading","setLoading","error","setError","carouselSettings","pagination","itemsToShow","enableSwipe","isRTL","disableArrowsOnEnd","enableTilt","renderArrow","type","onClick","isEdge","consts","PREV","disabled","src","RightArrow","alt","LeftArrow","useEffect","navigator","geolocation","getCurrentPosition","a","coords","fetch","latitude","longitude","process","weatherRes","json","weatherResBody","id","main","wind","name","country","sys","timestamp","dt","forecastRes","forecastResBody","hourly","daily","Date","map","day","key","min","max","hour","speed","humidity","Search","query","useParams","coord","lat","lon","NotFound","GlobalStyles","createGlobalStyle","Container","nav","Input","input","SearchBar","setQuery","history","useHistory","placeholder","value","onKeyUp","event","keyCode","push","onChange","target","SearchIcon","NavBar","Logo","Footer","href","rel","getFullYear","GH","TW","LI","App","path","exact","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.88854618.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.5cea32b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.845e73a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.d198cd79.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.75520b4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.ef7c26d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.65c48b64.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.2e548c6e.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tmin-height: 85vh;\r\n\tpadding: 2rem 0rem;\r\n\tdisplay: grid;\r\n\trow-gap: 3rem;\r\n\r\n\th2 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.main,\r\n\t.wind,\r\n\t.humidity {\r\n\t\tdisplay: grid;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.carousel-arrow {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\talign-self: center;\r\n\t\tcursor: pointer;\r\n\t\tpadding: 0 !important;\r\n\r\n\t\timg {\r\n\t\t\twidth: 48px;\r\n\t\t\theight: 48px;\r\n\t\t}\r\n\t}\r\n\r\n\t.error {\r\n\t\tdisplay: grid;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\r\n\t\th2 {\r\n\t\t\ttext-align: center;\r\n\t\t\tword-break: break-word;\r\n\t\t}\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nconst Loader = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: calc(50% - 25px);\r\n\tborder-radius: 50%;\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tborder: 3px solid rgba(0, 0, 0, 0.3);\r\n\tborder-top-color: rgba(0, 0, 0, 1);\r\n\tanimation: anim 0.5s infinite linear;\r\n\r\n\t@keyframes anim {\r\n\t\tto {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default Loader;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);\r\n\tdisplay: grid;\r\n\tgrid-template-rows: auto;\r\n\trow-gap: 0.5rem;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\twidth: 200px;\r\n\tpadding: 1rem;\r\n\tmargin: 1rem 0rem;\r\n\tword-wrap: break-word;\r\n\r\n\ti {\r\n\t\tfont-size: 5rem;\r\n\t}\r\n\r\n\t.cold {\r\n\t\tcolor: #429bb8;\r\n\t}\r\n\r\n\t.hot {\r\n\t\tcolor: #ff4500;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './styles';\r\n\r\ninterface Props {\r\n\tdate: Date;\r\n\tdata: string;\r\n\ticon: number;\r\n\ttime: boolean;\r\n\ttemp?: 'hot' | 'cold' | null;\r\n\tdescription?: string;\r\n}\r\n\r\nconst Card: React.FC<Props> = ({ date, time, data, temp, icon, description }) => {\r\n\tconst timeString: string = `${date.getHours() < 10 ? 0 : ''}${date.getHours()}:${\r\n\t\tdate.getMinutes() < 10 ? 0 : ''\r\n\t}${date.getMinutes()}`;\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<p>\r\n\t\t\t\t{date.toDateString().split(' ')[0]} {time ? timeString : ''}{' '}\r\n\t\t\t\t{(date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth()) +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\tdate.getDate()}\r\n\t\t\t</p>\r\n\t\t\t<h3>{data}</h3>\r\n\t\t\t<i className={`wi wi-owm-${icon} ${temp && temp}`}></i>\r\n\t\t\t<p>{description && description}</p>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n// @ts-ignore\r\nimport Carousel, { consts } from 'react-elastic-carousel';\r\nimport { Wrapper } from './styles';\r\nimport { Weather, WeatherResponse } from '../../types/weather';\r\nimport { Forecast, ForecastResponse } from '../../types/forecast';\r\nimport Loader from '../../components/Loader';\r\nimport Card from '../../components/Card';\r\nimport LeftArrow from '../../assets/left-arrow.svg';\r\nimport RightArrow from '../../assets/right-arrow.svg';\r\n\r\nconst Home: React.FC = () => {\r\n\tconst [weather, setWeather] = useState<Weather | null>(null);\r\n\tconst [forecast, setForecast] = useState<Forecast | null>(null);\r\n\tconst [loading, setLoading] = useState<boolean>(true);\r\n\tconst [error, setError] = useState<string>('');\r\n\r\n\tconst carouselSettings = {\r\n\t\tpagination: false,\r\n\t\titemsToShow: 1,\r\n\t\tenableSwipe: true,\r\n\t\tisRTL: false,\r\n\t\tdisableArrowsOnEnd: true,\r\n\t\tenableTilt: false,\r\n\t\trenderArrow: ({\r\n\t\t\ttype,\r\n\t\t\tonClick,\r\n\t\t\tisEdge\r\n\t\t}: {\r\n\t\t\ttype: string;\r\n\t\t\tonClick: () => void;\r\n\t\t\tisEdge: boolean;\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t\t{type !== consts.PREV ? (\r\n\t\t\t\t\t<button onClick={onClick} disabled={isEdge} type='button' className='carousel-arrow'>\r\n\t\t\t\t\t\t<img src={RightArrow} alt='Left slider arrow' />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button onClick={onClick} disabled={isEdge} type='button' className='carousel-arrow'>\r\n\t\t\t\t\t\t<img src={LeftArrow} alt='Right slider arrow' />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!navigator.geolocation)\r\n\t\t\tsetError('Geolocation not supported in this browser! Try searching for a city instead');\r\n\t\telse\r\n\t\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\tasync ({ coords }) => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet weatherRes: Response = await fetch(\r\n\t\t\t\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?lat=${coords.latitude}&lon=${coords.longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tlet weatherResBody: WeatherResponse = await weatherRes.json();\r\n\t\t\t\t\t\tsetWeather({\r\n\t\t\t\t\t\t\tdescription: weatherResBody.weather[0].description,\r\n\t\t\t\t\t\t\ticon: weatherResBody.weather[0].id,\r\n\t\t\t\t\t\t\tmain: weatherResBody.main,\r\n\t\t\t\t\t\t\twind: weatherResBody.wind,\r\n\t\t\t\t\t\t\tname: weatherResBody.name,\r\n\t\t\t\t\t\t\tcountry: weatherResBody.sys.country,\r\n\t\t\t\t\t\t\ttimestamp: weatherResBody.dt\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tlet forecastRes: Response = await fetch(\r\n\t\t\t\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.latitude}&lon=${coords.longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&exclude=minutely&units=metric`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tlet forecastResBody: ForecastResponse = await forecastRes.json();\r\n\t\t\t\t\t\tsetForecast({\r\n\t\t\t\t\t\t\thourly: forecastResBody.hourly,\r\n\t\t\t\t\t\t\tdaily: forecastResBody.daily\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\tsetError('Could not get weather data! Try again later');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetError('Geolocation not active! Try searching for a city instead');\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\treturn () => {\r\n\t\t\tsetError('');\r\n\t\t\tsetLoading(true);\r\n\t\t};\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\treturn !loading ? (\r\n\t\t<Wrapper>\r\n\t\t\t{weather && forecast && !error ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='main'>\r\n\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t{weather.name}, {weather.country}\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tdate={new Date(weather.timestamp * 1000)}\r\n\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\tdata={weather.main.temp + '°C'}\r\n\t\t\t\t\t\t\ttemp={weather.main.temp > 25 ? 'hot' : weather.main.temp < 20 ? 'cold' : null}\r\n\t\t\t\t\t\t\ticon={weather.icon}\r\n\t\t\t\t\t\t\tdescription={weather.description}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='daily-forecast'>\r\n\t\t\t\t\t\t<h2>Daily Forecast</h2>\r\n\t\t\t\t\t\t<Carousel {...carouselSettings}>\r\n\t\t\t\t\t\t\t{forecast.daily.map(day => (\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tkey={day.dt}\r\n\t\t\t\t\t\t\t\t\tdate={new Date(day.dt * 1000)}\r\n\t\t\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\t\t\tdata={day.temp.min + '°C/' + day.temp.max + '°C'}\r\n\t\t\t\t\t\t\t\t\ttemp={day.temp.max > 25 ? 'hot' : day.temp.max < 20 ? 'cold' : null}\r\n\t\t\t\t\t\t\t\t\ticon={day.weather[0].id}\r\n\t\t\t\t\t\t\t\t\tdescription={day.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Carousel>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='hourly-forecast'>\r\n\t\t\t\t\t\t<h2>Hourly Forecast</h2>\r\n\t\t\t\t\t\t<Carousel {...carouselSettings}>\r\n\t\t\t\t\t\t\t{forecast.hourly.map(hour => (\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tkey={hour.dt}\r\n\t\t\t\t\t\t\t\t\tdate={new Date(hour.dt * 1000)}\r\n\t\t\t\t\t\t\t\t\ttime={true}\r\n\t\t\t\t\t\t\t\t\tdata={hour.temp + '°C'}\r\n\t\t\t\t\t\t\t\t\ttemp={hour.temp > 25 ? 'hot' : hour.temp < 20 ? 'cold' : null}\r\n\t\t\t\t\t\t\t\t\ticon={hour.weather[0].id}\r\n\t\t\t\t\t\t\t\t\tdescription={hour.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Carousel>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='wind'>\r\n\t\t\t\t\t\t<h2>Wind</h2>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tdate={new Date(weather.timestamp * 1000)}\r\n\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\tdata={weather.wind.speed + 'km/h'}\r\n\t\t\t\t\t\t\ticon={781}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='humidity'>\r\n\t\t\t\t\t\t<h2>Humidity</h2>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tdate={new Date(weather.timestamp * 1000)}\r\n\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\tdata={weather.main.humidity + '%'}\r\n\t\t\t\t\t\t\ticon={741}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<div className='error'>\r\n\t\t\t\t\t<h2>{error}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t) : (\r\n\t\t<Wrapper>\r\n\t\t\t<Loader />\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tmin-height: 85vh;\r\n\tpadding: 2rem 0rem;\r\n\tdisplay: grid;\r\n\trow-gap: 3rem;\r\n\r\n\th2 {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.main,\r\n\t.wind,\r\n\t.humidity {\r\n\t\tdisplay: grid;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.carousel-arrow {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\talign-self: center;\r\n\t\tcursor: pointer;\r\n\t\tpadding: 0 !important;\r\n\r\n\t\timg {\r\n\t\t\twidth: 48px;\r\n\t\t\theight: 48px;\r\n\t\t}\r\n\t}\r\n\r\n\t.error {\r\n\t\tdisplay: grid;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\r\n\t\th2 {\r\n\t\t\ttext-align: center;\r\n\t\t\tword-break: break-word;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\n// @ts-ignore\r\nimport Carousel, { consts } from 'react-elastic-carousel';\r\nimport { Wrapper } from './styles';\r\nimport { Weather, WeatherSearchResponse } from '../../types/weather';\r\nimport { Forecast, ForecastResponse } from '../../types/forecast';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport Card from '../../components/Card';\r\nimport LeftArrow from '../../assets/left-arrow.svg';\r\nimport RightArrow from '../../assets/right-arrow.svg';\r\n\r\nconst Search: React.FC = () => {\r\n\tconst [weather, setWeather] = useState<Weather | null>(null);\r\n\tconst [forecast, setForecast] = useState<Forecast | null>(null);\r\n\tconst [loading, setLoading] = useState<boolean>(true);\r\n\tconst [error, setError] = useState<string>('');\r\n\tconst { query } = useParams<{ query: string }>();\r\n\r\n\tconst carouselSettings = {\r\n\t\tpagination: false,\r\n\t\titemsToShow: 1,\r\n\t\tenableSwipe: true,\r\n\t\tisRTL: false,\r\n\t\tdisableArrowsOnEnd: true,\r\n\t\tenableTilt: false,\r\n\t\trenderArrow: ({\r\n\t\t\ttype,\r\n\t\t\tonClick,\r\n\t\t\tisEdge\r\n\t\t}: {\r\n\t\t\ttype: string;\r\n\t\t\tonClick: () => void;\r\n\t\t\tisEdge: boolean;\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t\t{type !== consts.PREV ? (\r\n\t\t\t\t\t<button onClick={onClick} disabled={isEdge} type='button' className='carousel-arrow'>\r\n\t\t\t\t\t\t<img src={RightArrow} alt='Left slider arrow' />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button onClick={onClick} disabled={isEdge} type='button' className='carousel-arrow'>\r\n\t\t\t\t\t\t<img src={LeftArrow} alt='Right slider arrow' />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet weatherRes: Response = await fetch(\r\n\t\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\r\n\t\t\t\t);\r\n\t\t\t\tlet weatherResBody: WeatherSearchResponse = await weatherRes.json();\r\n\t\t\t\tsetWeather({\r\n\t\t\t\t\tdescription: weatherResBody.weather[0].description,\r\n\t\t\t\t\ticon: weatherResBody.weather[0].id,\r\n\t\t\t\t\tmain: weatherResBody.main,\r\n\t\t\t\t\twind: weatherResBody.wind,\r\n\t\t\t\t\tname: weatherResBody.name,\r\n\t\t\t\t\tcountry: weatherResBody.sys.country,\r\n\t\t\t\t\ttimestamp: weatherResBody.dt\r\n\t\t\t\t});\r\n\t\t\t\tlet coords = weatherResBody.coord;\r\n\t\t\t\tlet forecastRes: Response = await fetch(\r\n\t\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.lat}&lon=${coords.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&exclude=minutely&units=metric`\r\n\t\t\t\t);\r\n\t\t\t\tlet forecastResBody: ForecastResponse = await forecastRes.json();\r\n\t\t\t\tsetForecast({\r\n\t\t\t\t\thourly: forecastResBody.hourly,\r\n\t\t\t\t\tdaily: forecastResBody.daily\r\n\t\t\t\t});\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError('Could not find any weather data! Try again later');\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\treturn () => {\r\n\t\t\tsetError('');\r\n\t\t\tsetLoading(true);\r\n\t\t};\r\n\t}, [query]);\r\n\r\n\treturn !loading ? (\r\n\t\t<Wrapper>\r\n\t\t\t{weather && forecast && !error ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='main'>\r\n\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t{weather.name}, {weather.country}\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tdate={new Date(weather.timestamp * 1000)}\r\n\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\tdata={weather.main.temp + '°C'}\r\n\t\t\t\t\t\t\ttemp={weather.main.temp > 25 ? 'hot' : weather.main.temp < 20 ? 'cold' : null}\r\n\t\t\t\t\t\t\ticon={weather.icon}\r\n\t\t\t\t\t\t\tdescription={weather.description}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='daily-forecast'>\r\n\t\t\t\t\t\t<h2>Daily Forecast</h2>\r\n\t\t\t\t\t\t<Carousel {...carouselSettings}>\r\n\t\t\t\t\t\t\t{forecast.daily.map(day => (\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tkey={day.dt}\r\n\t\t\t\t\t\t\t\t\tdate={new Date(day.dt * 1000)}\r\n\t\t\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\t\t\tdata={day.temp.min + '°C/' + day.temp.max + '°C'}\r\n\t\t\t\t\t\t\t\t\ttemp={day.temp.max > 25 ? 'hot' : day.temp.max < 20 ? 'cold' : null}\r\n\t\t\t\t\t\t\t\t\ticon={day.weather[0].id}\r\n\t\t\t\t\t\t\t\t\tdescription={day.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Carousel>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='hourly-forecast'>\r\n\t\t\t\t\t\t<h2>Hourly Forecast</h2>\r\n\t\t\t\t\t\t<Carousel {...carouselSettings}>\r\n\t\t\t\t\t\t\t{forecast.hourly.map(hour => (\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tkey={hour.dt}\r\n\t\t\t\t\t\t\t\t\tdate={new Date(hour.dt * 1000)}\r\n\t\t\t\t\t\t\t\t\ttime={true}\r\n\t\t\t\t\t\t\t\t\tdata={hour.temp + '°C'}\r\n\t\t\t\t\t\t\t\t\ttemp={hour.temp > 25 ? 'hot' : hour.temp < 20 ? 'cold' : null}\r\n\t\t\t\t\t\t\t\t\ticon={hour.weather[0].id}\r\n\t\t\t\t\t\t\t\t\tdescription={hour.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Carousel>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='wind'>\r\n\t\t\t\t\t\t<h2>Wind</h2>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tdate={new Date(weather.timestamp * 1000)}\r\n\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\tdata={weather.wind.speed + 'km/h'}\r\n\t\t\t\t\t\t\ticon={781}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='humidity'>\r\n\t\t\t\t\t\t<h2>Humidity</h2>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tdate={new Date(weather.timestamp * 1000)}\r\n\t\t\t\t\t\t\ttime={false}\r\n\t\t\t\t\t\t\tdata={weather.main.humidity + '%'}\r\n\t\t\t\t\t\t\ticon={741}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<div className='error'>\r\n\t\t\t\t\t<h2>{error}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t) : (\r\n\t\t<Wrapper>\r\n\t\t\t<Loader />\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\theight: 85vh;\r\n\tdisplay: grid;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './styles';\r\n\r\nconst NotFound: React.FC = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<h2>404 Page not found</h2>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default NotFound;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n    outline: none;\r\n    font-family: 'Poppins';\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\twidth: 70%;\r\n\tmargin: 0 auto;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\twidth: 90%;\r\n\t}\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.nav`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 0.7fr;\r\n\talign-items: center;\r\n\tpadding: 0.5rem 0rem;\r\n\r\n\t.logo {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\r\n\t\timg {\r\n\t\t\twidth: 36px;\r\n\t\t\theight: 36px;\r\n\t\t}\r\n\r\n\t\th1 {\r\n\t\t\tmargin-left: 0.5rem;\r\n\t\t\tcursor: pointer;\r\n\t\t\tjustify-self: flex-start;\r\n\t\t}\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr auto;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.15);\r\n\tborder-radius: 5px;\r\n\tjustify-self: flex-end;\r\n\tpadding: 0.2rem 0.5rem;\r\n\r\n\timg {\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\toverflow: hidden;\r\n\tuser-select: text !important;\r\n\r\n\t&::placeholder {\r\n\t\tcolor: rgba(0, 0, 0, 0.5);\r\n\t}\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Wrapper, Input } from './styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchIcon from '../../assets/search.svg';\r\n\r\nconst SearchBar: React.FC = () => {\r\n\tconst [query, setQuery] = useState<string>('');\r\n\tconst history = useHistory();\r\n\r\n\tconst search = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif ((event.key === 'Enter' || event.keyCode === 13) && query !== '') {\r\n\t\t\thistory.push(`/search/${query}`);\r\n\t\t\tsetQuery('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Input\r\n\t\t\t\tplaceholder='Search'\r\n\t\t\t\tvalue={query}\r\n\t\t\t\tonKeyUp={search}\r\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => setQuery(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<img\r\n\t\t\t\tsrc={SearchIcon}\r\n\t\t\t\talt='Search icon'\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (query !== '') history.push(`/search/${query}`);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Wrapper } from './styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchBar from '../SearchBar';\r\nimport Logo from '../../assets/logo.svg';\r\n\r\nconst NavBar: React.FC = () => {\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<div className='logo'>\r\n\t\t\t\t<img src={Logo} alt='Logo' />\r\n\t\t\t\t<h1 onClick={() => history.push('/home')}>Weather</h1>\r\n\t\t\t</div>\r\n\t\t\t<SearchBar />\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: auto 0.7fr;\r\n\talign-items: center;\r\n\tpadding: 0.5rem 0rem;\r\n\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\tp {\r\n\t\tjustify-self: flex-start;\r\n\t}\r\n\r\n\t.contact {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(3, 16px);\r\n\t\tcolumn-gap: 0.5rem;\r\n\t\talign-items: center;\r\n\t\tjustify-content: flex-end;\r\n\r\n\t\timg {\r\n\t\t\twidth: 16px;\r\n\t\t\theight: 16px;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from './styles';\r\nimport TW from '../../assets/twitter.svg';\r\nimport GH from '../../assets/github.svg';\r\nimport LI from '../../assets/linkedin.svg';\r\n\r\nconst Footer: React.FC = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<p>\r\n\t\t\t\t<a href='https://hazemkrimi.tech' target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\tHazem Krimi\r\n\t\t\t\t</a>{' '}\r\n\t\t\t\t&copy; {new Date().getFullYear()}\r\n\t\t\t</p>\r\n\t\t\t<div className='contact'>\r\n\t\t\t\t<a href='https://github.com/hazemKrimi' target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<img src={GH} alt='Github' />\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href='https://twitter.com/HazemKrimi' target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<img src={TW} alt='Twitter' />\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href='https://www.linkedin.com/in/hazemkrimi/' target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<img src={LI} alt='LinkedIn' />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport NotFound from './pages/NotFound';\r\nimport GlobalStyles from './components/GlobalStyles';\r\nimport Container from './components/Container';\r\nimport NavBar from './components/NavBar';\r\nimport Footer from './components/Footer';\r\nimport './css/weather-icons.min.css';\r\nimport './css/weather-icons-wind.min.css';\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GlobalStyles />\r\n\t\t\t<Container>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path='/' exact>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/home' exact>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/search/:query'>\r\n\t\t\t\t\t\t<Search />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/search'>\r\n\t\t\t\t\t\t<Redirect to='/home' />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='*' exact>\r\n\t\t\t\t\t\t<NotFound />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<Footer />\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename='/react-weather-app'>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}